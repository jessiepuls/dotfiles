#!/bin/bash

if [[ -n $CI ]]
then 
    echo "üö´ Skipping github setup for CI"
    exit 0
fi

generate_keyfile ()
{
    local SERVICE=$1
    local FILE="$HOME/.ssh/id_rsa_$SERVICE"

    if [ ! -f "$FILE" ]; then
        echo "üíª Setting up ssh key for $SERVICE"
        ssh-keygen -f $FILE -q -N ""
    else
       echo "üíª Key has already been genrated for $SERVICE and can be found at $FILE"
    fi
}

generate_keyfile github
generate_keyfile gitlab

ssh git@github.com
RESULT=$?
if [ $RESULT -eq 1 ]; then
    echo "Successfully authenticated to github"
elif [ $RESULT -eq 255 ]; then
    echo "Setting preferred protocol to ssh"
    gh config set git_protocol ssh --host github.com

    echo "Setting preferred editor to vim"
    gh config set editor vim

    echo "Disabling prompts"
    gh config set prompt disabled

    echo "Setting editor to vscode"
    gh config set editor "code --wait"

    # sign into github
    gh auth login -s admin:public_key --web

    if [[ -z "${GITHUB_KEY_NAME}" ]]; then
        echo "Enter a name for this key:"
        read key_name
    else
        key_name=${GITHUB_KEY_NAME}
    fi

    # push key into github and prompt for a name
    gh ssh-key add $FILE.pub --title $key_name
else
    echo "‚ÅâÔ∏è Unknown exit code ($RESULT) while attempting to connect to github"
fi